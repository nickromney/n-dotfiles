# Package manager configurations and tool specifications
package_managers:
  apt:
    types:
      - package # apt-get install packages
    default_type: package

  arkade:
    types:
      - get # arkade get tool
      - install # arkade install tool: Install Kubernetes apps from helm charts or YAML files using the "install" command.
      - system # arkade system install
    default_type: get

  brew:
    types:
      - package # regular brew packages
      - cask # --cask packages
      - tap # brew tap repositories
    default_type: package

  uv:
    types:
      - tool # uv tool install
    default_type: tool

tools:
  # arkade tools

  actions-usage:
    manager: arkade
    type: get
    check_command: "test -f $HOME/.arkade/bin/actions-usage"
    install_args: []

  atuin:
    manager: arkade
    type: get
    check_command: "test -f $HOME/.arkade/bin/atuin"
    install_args: []

  bun:
    manager: arkade
    type: get
    check_command: "test -f $HOME/.arkade/bin/bun"
    install_args: []

  hostctl:
    manager: arkade
    type: get
    check_command: "test -f $HOME/.arkade/bin/hostctl"
    install_args: []

  # Cask packages
  1password-cli:
    manager: brew
    type: cask
    check_command: "op --version"
    install_args: []

  font-jetbrains-mono-nerd-font:
    manager: brew
    type: cask
    check_command: 'brew list --cask font-jetbrains-mono-nerd-font >/dev/null 2>&1 || [ -d "$HOME/Library/Fonts/JetBrainsMono" ] || [ -d "/Library/Fonts/JetBrainsMono" ]'
    install_args: []

  karabiner-elements:
    manager: brew
    type: cask
    check_command: 'test -d "/Applications/Karabiner-Elements.app"'
    install_args: []

  kitty:
    manager: brew
    type: cask
    check_command: 'brew list --cask kitty >/dev/null 2>&1 || [ -d "/Applications/kitty.app" ] || which kitty >/dev/null 2>&1'
    install_args: []

  # Regular brew packages
  act:
    manager: brew
    type: package
    check_command: "act --version"
    install_args: []

  automake:
    manager: brew
    type: package
    check_command: "automake --version"
    install_args: []

  azure-cli:
    manager: brew
    type: package
    check_command: "az --version"
    install_args: []

  bash:
    manager: brew
    type: package
    check_command: "bash --version | grep -q 'version 5'"
    install_args: []

  bat:
    manager: brew
    type: package
    check_command: "bat --version"
    install_args: []

  bats-core:
    manager: brew
    type: package
    check_command: "bats --version"
    install_args: []

  bpytop:
    manager: brew
    type: package
    check_command: "bpytop --version"
    install_args: []

  brew-cask-completion:
    manager: brew
    type: package
    check_command: "brew list brew-cask-completion"
    install_args: []

  brew-gem:
    manager: brew
    type: package
    check_command: "brew list brew-gem >/dev/null 2>&1 || which brew-gem >/dev/null 2>&1"
    install_args: []

  eza:
    manager: brew
    type: package
    check_command: "eza --version"
    install_args: []

  fd:
    manager: brew
    type: package
    check_command: "fd --version"
    install_args: []

  fx:
    manager: brew
    type: package
    check_command: "fx --version"
    install_args: []

  fzf:
    manager: brew
    type: package
    check_command: "fzf --version"
    install_args: []

  gh:
    manager: brew
    type: package
    check_command: "gh --version"
    install_args: []

  jq:
    manager: brew
    type: package
    check_command: "jq --version"
    install_args: []

  lazygit:
    manager: brew
    type: package
    check_command: "lazygit --version"
    install_args: []

  mas:
    manager: brew
    type: package
    check_command: "mas version"
    install_args: []

  midnight-commander:
    manager: brew
    type: package
    check_command: "mc --version"
    install_args: []

  ncdu:
    manager: brew
    type: package
    check_command: "ncdu --version"
    install_args: []

  neovim:
    manager: brew
    type: package
    check_command: "nvim --version"
    install_args: []

  nushell:
    manager: brew
    type: package
    check_command: "nu --version"
    install_args: []

  nvm:
    manager: brew
    type: package
    check_command: "which nvm >/dev/null 2>&1"
    install_args: []

  pulumi:
    manager: brew
    type: package
    check_command: "pulumi version"
    install_args: []

  ranger:
    manager: brew
    type: package
    check_command: "ranger --version"
    install_args: []

  ripgrep:
    manager: brew
    type: package
    check_command: "rg --version"
    install_args: []

  rust:
    manager: brew
    type: package
    check_command: "rustc --version"
    install_args: []

  shellcheck:
    manager: brew
    type: package
    check_command: "shellcheck --version"
    install_args: []

  sk:
    manager: brew
    type: package
    check_command: "sk --version"
    install_args: []

  starship:
    manager: brew
    type: package
    check_command: "starship --version"
    install_args: []

  stow:
    manager: brew
    type: package
    check_command: "stow --version"
    install_args: []

  the_silver_searcher:
    manager: brew
    type: package
    check_command: "ag --version"
    install_args: []

  tmux:
    manager: brew
    type: package
    check_command: "tmux -V"
    install_args: []

  trivy:
    manager: brew
    type: package
    check_command: "trivy --version"
    install_args: []

  wget:
    manager: brew
    type: package
    check_command: "wget --version"
    install_args: []

  xh:
    manager: brew
    type: package
    check_command: "xh --version"
    install_args: []

  yamllint:
    manager: brew
    type: package
    check_command: "yamllint --version"
    install_args: []

  ykman:
    manager: brew
    type: package
    check_command: "ykman --version"
    install_args: []

  yq:
    manager: brew
    type: package
    check_command: "yq --version"
    install_args: []

  zoxide:
    manager: brew
    type: package
    check_command: "zoxide --version"
    install_args: []

  zsh-autosuggestions:
    manager: brew
    type: package
    check_command: "brew list zsh-autosuggestions >/dev/null 2>&1"
    install_args: []

  zsh-syntax-highlighting:
    manager: brew
    type: package
    check_command: "brew list zsh-syntax-highlighting >/dev/null 2>&1"
    install_args: []

  # Tap repositories
  felixkratz/formulae:
    manager: brew
    type: tap
    check_command: "brew tap | grep -q '^felixkratz/formulae$'"
    install_args: []

  nikitabobko/tap:
    manager: brew
    type: tap
    check_command: "brew tap | grep -q '^nikitabobko/tap$'"
    install_args: []

  noahgorstein/tap:
    manager: brew
    type: tap
    check_command: "brew tap | grep -q '^noahgorstein/tap$'"
    install_args: []

  # Brew packages from tap repositories
  aerospace:
    manager: brew
    type: cask
    check_command: 'test -d "/Applications/Aerospace.app"'
    install_args: ["nikitabobko/tap/aerospace"]

  jankyborders:
    manager: brew
    type: package
    check_command: "which borders >/dev/null 2>&1"
    install_args: ["felixkratz/formulae/borders"]

  jqp:
    manager: brew
    type: package
    check_command: "which jqp >/dev/null 2>&1"
    install_args: ["noahgorstein/tap/jqp"]

  # uv
  posting:
    manager: uv
    type: tool
    check_command: "which posting >/dev/null 2>&1"
    install_args: ["--python", "3.12"]
