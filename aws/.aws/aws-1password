#!/usr/bin/env bash

# Exit on error
set -e

# Default values
username="default"

# Parse named parameters
while [ $# -gt 0 ]; do
  case "$1" in
  --username)
    username="$2"
    shift 2
    ;;
  *)
    echo "Unknown parameter: $1"
    echo "Usage: $0 [--username <profile_name>]"
    exit 1
    ;;
  esac
done

# Get the primary user from the system
get_primary_user() {
  # Get the first non-system user from /Users directory
  # Excludes Shared and Guest users
  for user in /Users/*; do
    user_name=$(basename "$user")
    if [[ "$user_name" != "Shared" && "$user_name" != "Guest" ]]; then
      echo "$user_name"
      return
    fi
  done
}

# Map usernames to their corresponding 1Password entries
get_op_entry() {
  local primary_user
  primary_user=$(get_primary_user)
  
  case "$1" in
  "tfcli")
    echo "AWSCredsUsernameTFCLI"
    ;;
  "default")
    echo "AWSCredsUsername${primary_user}"
    ;;
  # Add more profiles as needed
  *)
    echo "Unknown username: $1" >&2
    exit 1
    ;;
  esac
}

readonly opVault="CLI"
opEntry=$(get_op_entry "$username")

# Fetch credentials from 1Password
accessKeyId=$(op read "op://$opVault/$opEntry/ACCESS_KEY")
secretAccessKey=$(op read "op://$opVault/$opEntry/SECRET_KEY")

# Create JSON object that AWS CLI expects
jq -n \
  --arg accessKeyId "$accessKeyId" \
  --arg secretAccessKey "$secretAccessKey" \
  ".Version = 1
    | .AccessKeyId = \$accessKeyId
    | .SecretAccessKey = \$secretAccessKey"
